// Generated by view binder compiler. Do not edit!
package com.example.rupizza.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rupizza.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityStoreOrdersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton backButton;

  @NonNull
  public final Button cancelOrderButton;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView orderRecyclerView;

  @NonNull
  public final Spinner orderSpinner;

  @NonNull
  public final TextView orderTotalTextView;

  @NonNull
  public final TextView textView;

  private ActivityStoreOrdersBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton backButton, @NonNull Button cancelOrderButton,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView orderRecyclerView,
      @NonNull Spinner orderSpinner, @NonNull TextView orderTotalTextView,
      @NonNull TextView textView) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.cancelOrderButton = cancelOrderButton;
    this.linearLayout = linearLayout;
    this.orderRecyclerView = orderRecyclerView;
    this.orderSpinner = orderSpinner;
    this.orderTotalTextView = orderTotalTextView;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityStoreOrdersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityStoreOrdersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_store_orders, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityStoreOrdersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      FloatingActionButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.cancelOrderButton;
      Button cancelOrderButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelOrderButton == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.orderRecyclerView;
      RecyclerView orderRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (orderRecyclerView == null) {
        break missingId;
      }

      id = R.id.orderSpinner;
      Spinner orderSpinner = ViewBindings.findChildViewById(rootView, id);
      if (orderSpinner == null) {
        break missingId;
      }

      id = R.id.orderTotalTextView;
      TextView orderTotalTextView = ViewBindings.findChildViewById(rootView, id);
      if (orderTotalTextView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new ActivityStoreOrdersBinding((ConstraintLayout) rootView, backButton,
          cancelOrderButton, linearLayout, orderRecyclerView, orderSpinner, orderTotalTextView,
          textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
